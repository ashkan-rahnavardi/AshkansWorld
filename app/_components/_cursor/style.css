.main-cursor,
.secondary-cursor {
  z-index: 10000;
  pointer-events: none;
  transform: translate3d(0, 0, 0);
  position: fixed;
}
.main-cursor {
  transition: opacity 1s cubic-bezier(0.77, 0, 0.175, 1);
  animation: fadeIn 1s cubic-bezier(0.77, 0, 0.175, 1) 0s forwards;
  mix-blend-mode: difference;
}

.main-cursor-background {
  width: 6px;
  height: 6px;
  background: white;
  border-radius: 50%;
}

.secondary-cursor svg,
.secondary-cursor svg polygon {
  /* Invert whatever color is below, guaranteeing contrast: */
  mix-blend-mode: difference;
  /* Make sure the stroke is white so inversion works predictably: */
  stroke: #fff;
  /* Keep a non-scaling 1px stroke: */
  stroke-width: 1px;
  vector-effect: non-scaling-stroke;
  fill: none;
}

.secondary-cursor svg {
  overflow: visible;
}
.secondary-cursor svg circle {
  display: block;
}
.secondary-cursor svg polygon {
  display: none;
}
.secondary-cursor.hovering svg circle {
  display: none;
}
.secondary-cursor.hovering svg polygon {
  display: block;
}

.secondary-cursor {
  /* transition: opacity 1s cubic-bezier(0.77, 0, 0.175, 1); */
  /* animation: fadeIn 1s cubic-bezier(0.77, 0, 0.175, 1) 0s forwards; */
  /* mix-blend-mode: difference; */
  /* transition: all 0.5s cubic-bezier(0.165, 0.84, 0.44, 1); */
  width: 15px;
  height: 15px;
}

.main-cursor.hovering + .secondary-cursor {
  width: 33px;
  height: 33px;
}

/* .cursor-background { */
/*   width: 100%; */
/*   height: 100%; */
/*   border-radius: 50%; */
/*   border: 1px solid #fff; */
/*   position: relative; */
/* } */
/**/
/* .secondary-cursor.hovering .cursor-background { */
/*   border: 3px solid #fff; */
/* } */

/* .cursor-background:after, */
/* .cursor-background:before { */
/*   content: ""; */
/*   width: 3px; */
/*   height: 3px; */
/*   border-radius: 50%; */
/*   background: white; */
/*   display: block; */
/*   position: absolute; */
/*   top: 50%; */
/*   transform: translateY(-50%); */
/*   animation: fadeOut 0.75s cubic-bezier(0.77, 0, 0.175, 1) 0s forwards; */
/* } */
/**/
/* .cursor-background:before { */
/*   left: 10px; */
/* } */
/**/
/* .cursor-background:after { */
/*   right: 10px; */
/* } */

.slider-drag .cursor-background {
  animation:
    scaleUp 1s cubic-bezier(0.77, 0, 0.175, 1) 0s forwards,
    bgUp 1s cubic-bezier(0.77, 0, 0.175, 1) 0s forwards;
}

.slider-drag .cursor-background:after {
  animation:
    fadeIn 1s cubic-bezier(0.77, 0, 0.175, 1) 0s forwards,
    translateRightDot 1s cubic-bezier(0.77, 0, 0.175, 1) 0s forwards;
}

.slider-drag .cursor-background:before {
  animation:
    fadeIn 1s cubic-bezier(0.77, 0, 0.175, 1) 0s forwards,
    translateLeftDot 1s cubic-bezier(0.77, 0, 0.175, 1) 0s forwards;
}

.slider-drag .main-cursor {
  animation: fadeOut 0.75s cubic-bezier(0.77, 0, 0.175, 1) 0s forwards;
}

.hamburger .cursor-background {
  animation: fadeOut 1s cubic-bezier(0.77, 0, 0.175, 1) 0s forwards;
}

.hamburger .main-cursor-background {
  animation: scaleUp 1s cubic-bezier(0.77, 0, 0.175, 1) 0s forwards;
}

@media (max-width: 768px) {
  .main-cursor {
    display: none;
  }
  .secondary-cursor {
    display: none;
  }
}

@keyframes fadeIn {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}

@keyframes fadeOut {
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
}

@keyframes bgUp {
  from {
    background-color: transparent;
  }

  to {
    background-color: black;
  }
}

@keyframes bgDown {
  from {
    background-color: black;
  }

  to {
    background-color: transparent;
  }
}

@keyframes scaleUp {
  from {
    transform: scale(1);
  }

  to {
    transform: scale(1.5);
  }
}

@keyframes scaleDown {
  from {
    transform: scale(1.5);
  }

  to {
    transform: scale(1);
  }
}

@keyframes translateLeftDot {
  from {
    transform: translate(20px, -50%);
  }

  to {
    transform: translate(0px, -50%);
  }
}

@keyframes translateRightDot {
  from {
    transform: translate(-20px, -50%);
  }

  to {
    transform: translate(0px, -50%);
  }
}

/* at the bottom of your style.css */

.secondary-cursor {
  /* create a new stacking context so blend modes see the page behind */
  isolation: isolate;
  /* invert whatever is behind it: white → black over white, white over black */
  mix-blend-mode: difference;
  /* mix-blend-mode: luminosity; */
}

/* you can now simplify these, leaving only stroke/fill and sizing: */
.secondary-cursor svg,
.secondary-cursor svg circle,
.secondary-cursor svg polygon {
  overflow: visible; /* allow full outline */
  stroke: #fff; /* define “foreground” for the difference */
  vector-effect: non-scaling-stroke;
  /* remove stroke-width here if you already set it inline */
}

/* keep your show/hide logic */
.secondary-cursor svg circle {
  display: block;
}
.secondary-cursor svg polygon {
  display: none;
}
.secondary-cursor.hovering svg circle {
  display: none;
}
.secondary-cursor.hovering svg polygon {
  display: block;
}
